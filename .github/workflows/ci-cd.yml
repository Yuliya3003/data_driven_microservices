name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          cd eureka-server
          mvn clean package -DskipTests
          cd ../user-service
          mvn clean package -DskipTests
          cd ../task-service
          mvn clean package -DskipTests
          cd ../api_gateway
          mvn clean package -DskipTests

      - name: Run tests
        run: |
          cd eureka-server
          mvn test
          cd ../user-service
          mvn test
          cd ../task-service
          mvn test
          cd ../api_gateway
          mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          sudo chmod +x /usr/bin/docker-compose
          echo "Checking Docker Compose version:"
          docker-compose --version
          echo "Checking PATH:"
          echo $PATH
          echo "Listing /usr/bin:"
          ls -l /usr/bin/docker-compose

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

      - name: Deploy to server
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          echo "$DEPLOY_KEY" > deploy_key
          chmod 600 deploy_key
          ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_SERVER << 'EOF'
            mkdir -p ~/taskmanager
            cd ~/taskmanager
            docker-compose down
            docker-compose pull
            docker-compose up -d
          EOF

  generate-metrics-page:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Generate metrics HTML
        run: |
          python generate_metrics_page.py

      - name: Deploy HTML to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public