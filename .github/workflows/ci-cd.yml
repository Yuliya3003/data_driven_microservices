name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          cd eureka-server
          mvn clean package -DskipTests
          cd ../user-service
          mvn clean package -DskipTests
          cd ../task-service
          mvn clean package -DskipTests
          cd ../api_gateway
          mvn clean package -DskipTests

      - name: Run tests
        run: |
          cd eureka-server
          mvn test
          cd ../user-service
          mvn test
          cd ../task-service
          mvn test
          cd ../api_gateway
          mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    services:
      prometheus:
        image: prom/prometheus:latest
        volumes:
          - ./prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
          - 9090:9090
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clean up existing prometheus.yml
        run: |
          rm -rf prometheus.yml  
          echo "Removed any existing prometheus.yml"

      - name: Create prometheus.yml
        run: |
          cat <<EOF > prometheus.yml
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'api-gateway'
              static_configs:
                - targets: ['api-gateway:8080']
            - job_name: 'user-service'
              static_configs:
                - targets: ['user-service:8081']
            - job_name: 'task-service'
              static_configs:
                - targets: ['task-service:8082']
          EOF
          ls -la prometheus.yml
          cat prometheus.yml
          chmod 644 prometheus.yml  

      - name: Check if prometheus.yml exists
        run: |
          ls -la
          if [ -f "./prometheus.yml" ]; then
            echo "prometheus.yml found"
            cat ./prometheus.yml
          else
            echo "prometheus.yml NOT found"
            exit 1
          fi

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          sudo chmod +x /usr/bin/docker-compose
          echo "Checking Docker Compose version:"
          docker-compose --version
          echo "Checking PATH:"
          echo $PATH
          echo "Listing /usr/bin:"
          ls -l /usr/bin/docker-compose

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push
          docker-compose up -d

      - name: Check service metrics endpoints
        run: |
          sleep 10
          docker-compose exec api-gateway curl http://localhost:8080/actuator/prometheus || echo "API Gateway metrics unavailable"
          docker-compose exec user-service curl http://localhost:8081/actuator/prometheus || echo "User Service metrics unavailable"
          docker-compose exec task-service curl http://localhost:8082/actuator/prometheus || echo "Task Service metrics unavailable"

      - name: Check Prometheus logs
        run: |
          sleep 10
          docker-compose logs prometheus

      - name: Check Prometheus status
        run: |
          curl http://localhost:9090/api/v1/status/config || echo "Failed to get Prometheus config"
          curl http://localhost:9090/api/v1/targets || echo "Failed to get Prometheus targets"

      - name: Wait for Prometheus to collect metrics
        run: |
          sleep 60

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          pip install requests

      - name: Generate metrics HTML
        run: |
          curl http://localhost:9090/api/v1/query?query=http_server_requests_seconds_sum || echo "Failed to query Prometheus"
          python generate_metrics_page.py
          ls -la public
          cat public/index.html

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0.0
        with:
          publish-dir: './public'
          production-branch: main
          deploy-message: '${{ github.event.head_commit.message }}'
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}






